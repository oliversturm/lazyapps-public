version: '3.8'

services:
  traefik:
    image: traefik:latest
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mongo:
    image: mongo:latest

  redis:
    image: redis:latest

  command-processor:
    build:
      dockerfile: ./packages/millionaire/command-processor/Dockerfile
      context: ../..
    depends_on:
      - mongo
      - redis
    environment:
      EXPRESS_PORT: '80'
      MONGO_URL: 'mongodb://mongo:27017'
      MONGO_DATABASE: 'millionaire-events'
      REDIS_HOST: 'redis'
      LOG_LEVEL: 'trace'
    secrets:
      - jwt-secret
    labels:
      - 'traefik.enable=true'
      # command processor listens to /api/command, so no stripping required
      - 'traefik.http.routers.millionaire-command-processor.rule=PathPrefix(`/api/command`)'
      - 'traefik.http.routers.millionaire-command-processor.entrypoints=web'

  rm-data-maintenance:
    build:
      dockerfile: ./packages/millionaire/rm-data-maintenance/Dockerfile
      context: ../..
    depends_on:
      - mongo
      - redis
      - change-notifier
      - command-processor
    environment:
      EXPRESS_PORT: '80'
      MONGO_URL: 'mongodb://mongo:27017'
      MONGO_DATABASE: 'millionaire-rm-data-maintenance'
      REDIS_HOST: 'redis'
      CHANGENOTIFICATION_FETCH_URL: 'http://change-notifier/change'
      COMMAND_URL: 'http://command-processor/api/command'
      LOG_LEVEL: 'trace'
    secrets:
      - jwt-secret
    labels:
      - 'traefik.enable=true'
      # readmodel listens to /query/..., so stripping required
      - 'traefik.http.routers.millionaire-rm-data-maintenance.rule=PathPrefix(`/api/rm-data-maintenance`)'
      - 'traefik.http.routers.millionaire-rm-data-maintenance.entrypoints=web'
      - 'traefik.http.middlewares.millionaire-rm-data-maintenance-stripprefix.stripprefix.prefixes=/api/rm-data-maintenance'
      - 'traefik.http.middlewares.millionaire-rm-data-maintenance-stripprefix.stripprefix.forceSlash=false'
      - 'traefik.http.routers.millionaire-rm-data-maintenance.middlewares=millionaire-rm-data-maintenance-stripprefix@docker'

  rm-ingame:
    build:
      dockerfile: ./packages/millionaire/rm-ingame/Dockerfile
      context: ../..
    depends_on:
      - mongo
      - redis
      - change-notifier
      - command-processor
    environment:
      EXPRESS_PORT: '80'
      MONGO_URL: 'mongodb://mongo:27017'
      MONGO_DATABASE: 'millionaire-rm-ingame'
      REDIS_HOST: 'redis'
      CHANGENOTIFICATION_FETCH_URL: 'http://change-notifier/change'
      COMMAND_URL: 'http://command-processor/api/command'
      LOG_LEVEL: 'trace'
    secrets:
      - jwt-secret
    labels:
      - 'traefik.enable=true'
      # readmodel listens to /query/..., so stripping required
      - 'traefik.http.routers.millionaire-rm-ingame.rule=PathPrefix(`/api/rm-ingame`)'
      - 'traefik.http.routers.millionaire-rm-ingame.entrypoints=web'
      - 'traefik.http.middlewares.millionaire-rm-ingame-stripprefix.stripprefix.prefixes=/api/rm-ingame'
      - 'traefik.http.middlewares.millionaire-rm-ingame-stripprefix.stripprefix.forceSlash=false'
      - 'traefik.http.routers.millionaire-rm-ingame.middlewares=millionaire-rm-ingame-stripprefix@docker'

  change-notifier:
    build:
      dockerfile: ./packages/millionaire/change-notifier/Dockerfile
      context: ../..
    environment:
      EXPRESS_PORT: '80'
      LOG_LEVEL: 'trace'
    secrets:
      - jwt-secret
    labels:
      - 'traefik.enable=true'
      # change notifier listens to /change, so stripping required
      # extra entry for /socket.io -- just one websocket service
      # in this project, so that's easy
      - 'traefik.http.routers.millionaire-change-notifier.rule=PathPrefix(`/api/change-notifier`, `/socket.io/`)'
      - 'traefik.http.routers.millionaire-change-notifier.entrypoints=web'
      - 'traefik.http.middlewares.millionaire-change-notifier-stripprefix.stripprefix.prefixes=/api/change-notifier'
      - 'traefik.http.middlewares.millionaire-change-notifier-stripprefix.stripprefix.forceSlash=false'
      - 'traefik.http.routers.millionaire-change-notifier.middlewares=millionaire-change-notifier-stripprefix@docker'

  tokens:
    build:
      dockerfile: ./packages/millionaire/tokens/Dockerfile
      context: ../..
    environment:
      EXPRESS_PORT: '80'
      LOG_LEVEL: 'trace'
    secrets:
      - jwt-secret
      - username
      - pwdhash
    labels:
      - 'traefik.enable=true'
      # token service listens to /login and /getJwt, so stripping required
      - 'traefik.http.routers.millionaire-tokens.rule=PathPrefix(`/api/tokens`)'
      - 'traefik.http.routers.millionaire-tokens.entrypoints=web'
      - 'traefik.http.middlewares.millionaire-tokens-stripprefix.stripprefix.prefixes=/api/tokens'
      - 'traefik.http.middlewares.millionaire-tokens-stripprefix.stripprefix.forceSlash=false'
      - 'traefik.http.routers.millionaire-tokens.middlewares=millionaire-tokens-stripprefix@docker'

  frontend:
    build:
      dockerfile: ./packages/millionaire/frontend/Dockerfile
      context: ../..
    depends_on:
      - command-processor
      - rm-data-maintenance
      - rm-ingame
      - change-notifier
      - tokens
    volumes:
      - ./frontend/src:/src/packages/millionaire/frontend/src
    environment:
      VITE_TOKENSERVICE_URL: '/api/tokens'
      VITE_RM_DATA_MAINTENANCE_URL: '/api/rm-data-maintenance'
      VITE_RM_INGAME_URL: '/api/rm-ingame'
      # This URL is used to connect the socket.io client,
      # so do NOT pass /api/change-notifier here (socket.io
      # interprets this as a namespace)
      VITE_CHANGE_NOTIFIER_URL: '/'
      VITE_COMMAND_URL: '/api/command'
      VITE_PUBLIC_URL_BASE: 'http://127.0.0.1'
    labels:
      - 'traefik.enable=true'
      #- 'traefik.http.services.millionaire-frontend.loadbalancer.server.port=5173'
      - 'traefik.http.routers.millionaire-frontend.rule=PathPrefix(`/`)'
      - 'traefik.http.routers.millionaire-frontend.entrypoints=web'

secrets:
  jwt-secret:
    file: ./secrets/jwt-secret
  username:
    file: ./secrets/username
  pwdhash:
    file: ./secrets/pwdhash
